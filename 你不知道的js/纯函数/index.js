
// 在node环境下运行 不用控制台了 相当于在后台
// 纯函数： 在执行时不会影响外部变量 亦不会依赖外部环境的状态 这就是纯函数
// 不改变外部变量 只改变内部的变量 不影响外界
// 不依赖外界：没有外界提供的变量和方法就无法执行  外界变量和方法不是必须的

function compare(x,num) {//这是一个纯函数
    return x > num;
}
var num = 10;
console.log(compare(11, num));

// 使用纯函数减少bug的出现频率 有利于代码的维护 可以适当增加纯函数的使用
// 尽量把外界变量当参数传入 然后把参数复制一份去使用 返回出去 这样就不会改变原来的值

// 举个例子 数组过滤 

// 他更高端的应用常用在框架的使用中 组件化开发状态管理等等 不直接去改变数据 防止组件之间的相互影响 而是拷贝一份去使用
// 当然有些时候是必须得改变的 所以 纯函数也不是什么时候都适用的 要在合适的时机去使用
